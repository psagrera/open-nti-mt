[agent]
  interval = "{{ environ('TELEGRAF_AGENT_INTERVAL_SECONDS') }}s"
  round_interval = true
  flush_interval =  "{{ environ('TELEGRAF_AGENT_FLUSH_INTERVAL') }}"
  flush_jitter =  "{{ environ('TELEGRAF_AGENT_FLUSH_JITTER') }}"
  debug = {{ environ('TELEGRAF_AGENT_DEBUG') }}
  hostname = "{{ environ('TELEGRAF_AGENT_HOSTNAME') }}"
  metric_batch_size = {{ environ('TELEGRAF_AGENT_METRIC_BATCH_SIZE') }}
  metric_buffer_limit = {{ environ('TELEGRAF_AGENT_METRIC_BUFFER_LIMIT') }}
  collection_jitter = "{{ environ('TELEGRAF_AGENT_COLLECTION_JITTER') }}"

[[outputs.influxdb]]
  urls = ["http://{{ environ('INFLUXDB_ADDRESS') }}:{{ environ('INFLUXDB_PORT') }}"]
  database = "{{ environ('INFLUXDB_DB_NAME') }}"
  precision = "s"
  retention_policy = ""
  timeout = "{{ environ('INFLUXDB_DB_TIMEOUT') }}"
  username = "{{ environ('INFLUXDB_DB_USER') }}"
  password = "{{ environ('INFLUXDB_DB_PASSWD') }}"


[[inputs.exec]]
  commands = [
            {%-  for host, properties in hosts.items() -%}
               "/usr/bin/python3 /source/data/input-netconf.py -s --host {{ host }} --start_delay {{ (( environ('TELEGRAF_EXEC_TIMEOUT_SECONDS') | int ) // 4 ) * loop.index // loop.length}}",
            {%- endfor %}]
  timeout = "{{ environ('TELEGRAF_EXEC_TIMEOUT_SECONDS') }}s"
  data_format = "influx"

  # name_suffix = "_mycollector"

[[inputs.exec]]
  commands = ["/usr/bin/python3 /source/pfe_exceptions.py"]
  timeout = "{{ environ('TELEGRAF_AGENT_INTERVAL_SECONDS') }}s"
  data_format = "influx"
